# -*- coding: utf-8 -*-
"""EV2_EQUIPO2_EstructuraDatos.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1exTyk6enfHSLaImUNWoEBuwnQfOGMciz
"""

import pandas as pd

#ELABORADO POR EVELYN LARISSA GARZA MATA
modelo = ["ALTIMA","SENTRA","VERSA","JUKE","KICKS","X-TRAIL",]
stock = [55,100,96,78,102,56]
autos = pd.Series(stock,modelo)
#Con esto observaremos la cantidad de autos disponible de cada modelo

from pandas.io.formats.style_render import Index
for elemento in autos, Index:
  print(elemento)

autos.astype("float")

autos.value_counts()

autos.sort_values()

autos.size

#ELABORADO POR SERGIO FLORENTINO RAMOS ESTRADA

autos.index

autos.dtype

from google.colab import files
uploaded = files.upload()

import pandas as pd
import io

df = pd.read_csv(io.StringIO(uploaded['DatosNissan.csv'].decode('utf-8')))
df

df["PRECIO APROX."] = df["PRECIO APROX."].str.replace('$', '').str.replace(',', '').astype(float)

#ELABORADO POR OMAR APOLONIO LOPEZ GONZALEZ

# Contar el número de autos por tipo de auto
conteo_autos = df["TIPO DE AUTO"].value_counts()
print(conteo_autos)

# Calcular el precio total de todos los autos
precio_total = df["PRECIO APROX."].sum()
print(precio_total)

# Calcular la suma acumulada de los precios de los autos
suma_acumulada = df["PRECIO APROX."].cumsum()
print(suma_acumulada)

# Contar el número de autos por color
conteo_colores = df["COLOR"].value_counts()
print(conteo_colores)

# Encontrar el precio mínimo de un auto
precio_minimo = df["PRECIO APROX."].min()
print(precio_minimo)

#ELABORADO POR MIA JAMILET MENDOZA SANCHEZ

# Encontrar el año de fabricación más antiguo
año_fabricacion_minimo = df["AÑO"].min()
print(año_fabricacion_minimo)

# Encontrar el precio máximo de un auto
precio_maximo = df["PRECIO APROX."].max()
print(precio_maximo)

# Agruparemos los datos por tipo de combustible
df_agrupado = df.groupby("TIPO COMBUSTIBLE")

# Calcular el precio promedio por tipo de combustible
precio_promedio_por_combustible = df_agrupado["PRECIO APROX."].mean()
print(precio_promedio_por_combustible)

# Calcular la varianza de los precios
varianza = df["PRECIO APROX."].var()
print(varianza)

# Calcular la desviación estándar de los precios
desviacion_estandar = df["PRECIO APROX."].std()
print(desviacion_estandar)

#ELABORADO POR OSCAR KALID GUEL OROZCO

# Obtener un resumen estadístico de los datos
resumen_estadistico = df.describe()
print(resumen_estadistico)

df.plot()

df.info()

df.shape

df.size

df.columns

#ELABORADO POR OSMAR KALEB GUEL OROZCO

df.index

df.dtypes

df.head(5)

df.tail(5)

import numpy as np
import pandas as pd

# Crear un array de NumPy con los precios de los autos Nissan
array_precios = df["PRECIO APROX."].to_numpy()

# Calcular la suma de los precios
suma_precios = np.sum(array_precios)

# Calcular el promedio de los precios
promedio_precios = suma_precios / array_precios.size

# Calcular la desviación estándar de los precios
desviacion_estandar_precios = np.std(array_precios)

# Calcular la varianza de los precios
varianza_precios = np.var(array_precios)

# Imprimir los resultados
print("Suma de los precios:", suma_precios)
print("Promedio de los precios:", promedio_precios)
print("Desviación estándar de los precios:", desviacion_estandar_precios)
print("Varianza de los precios:", varianza_precios)